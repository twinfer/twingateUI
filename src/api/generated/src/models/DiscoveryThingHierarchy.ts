/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WotThingDescription } from './WotThingDescription';
import {
    WotThingDescriptionFromJSON,
    WotThingDescriptionFromJSONTyped,
    WotThingDescriptionToJSON,
    WotThingDescriptionToJSONTyped,
} from './WotThingDescription';

/**
 * 
 * @export
 * @interface DiscoveryThingHierarchy
 */
export interface DiscoveryThingHierarchy {
    /**
     * 
     * @type {Array<DiscoveryThingHierarchy>}
     * @memberof DiscoveryThingHierarchy
     */
    children?: Array<DiscoveryThingHierarchy>;
    /**
     * 
     * @type {number}
     * @memberof DiscoveryThingHierarchy
     */
    level?: number;
    /**
     * 
     * @type {WotThingDescription}
     * @memberof DiscoveryThingHierarchy
     */
    thing?: WotThingDescription;
}

/**
 * Check if a given object implements the DiscoveryThingHierarchy interface.
 */
export function instanceOfDiscoveryThingHierarchy(value: object): value is DiscoveryThingHierarchy {
    return true;
}

export function DiscoveryThingHierarchyFromJSON(json: any): DiscoveryThingHierarchy {
    return DiscoveryThingHierarchyFromJSONTyped(json, false);
}

export function DiscoveryThingHierarchyFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscoveryThingHierarchy {
    if (json == null) {
        return json;
    }
    return {
        
        'children': json['children'] == null ? undefined : ((json['children'] as Array<any>).map(DiscoveryThingHierarchyFromJSON)),
        'level': json['level'] == null ? undefined : json['level'],
        'thing': json['thing'] == null ? undefined : WotThingDescriptionFromJSON(json['thing']),
    };
}

export function DiscoveryThingHierarchyToJSON(json: any): DiscoveryThingHierarchy {
    return DiscoveryThingHierarchyToJSONTyped(json, false);
}

export function DiscoveryThingHierarchyToJSONTyped(value?: DiscoveryThingHierarchy | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'children': value['children'] == null ? undefined : ((value['children'] as Array<any>).map(DiscoveryThingHierarchyToJSON)),
        'level': value['level'],
        'thing': WotThingDescriptionToJSON(value['thing']),
    };
}

