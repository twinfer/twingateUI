/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TypesChangePasswordRequest
 */
export interface TypesChangePasswordRequest {
    /**
     * 
     * @type {string}
     * @memberof TypesChangePasswordRequest
     */
    currentPassword: string;
    /**
     * 
     * @type {string}
     * @memberof TypesChangePasswordRequest
     */
    newPassword: string;
}

/**
 * Check if a given object implements the TypesChangePasswordRequest interface.
 */
export function instanceOfTypesChangePasswordRequest(value: object): value is TypesChangePasswordRequest {
    if (!('currentPassword' in value) || value['currentPassword'] === undefined) return false;
    if (!('newPassword' in value) || value['newPassword'] === undefined) return false;
    return true;
}

export function TypesChangePasswordRequestFromJSON(json: any): TypesChangePasswordRequest {
    return TypesChangePasswordRequestFromJSONTyped(json, false);
}

export function TypesChangePasswordRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesChangePasswordRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'currentPassword': json['current_password'],
        'newPassword': json['new_password'],
    };
}

export function TypesChangePasswordRequestToJSON(json: any): TypesChangePasswordRequest {
    return TypesChangePasswordRequestToJSONTyped(json, false);
}

export function TypesChangePasswordRequestToJSONTyped(value?: TypesChangePasswordRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'current_password': value['currentPassword'],
        'new_password': value['newPassword'],
    };
}

