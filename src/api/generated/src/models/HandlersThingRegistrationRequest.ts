/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HandlersThingRegistrationRequest
 */
export interface HandlersThingRegistrationRequest {
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof HandlersThingRegistrationRequest
     */
    options?: { [key: string]: object; };
    /**
     * 
     * @type {string}
     * @memberof HandlersThingRegistrationRequest
     */
    thingDescription?: string;
}

/**
 * Check if a given object implements the HandlersThingRegistrationRequest interface.
 */
export function instanceOfHandlersThingRegistrationRequest(value: object): value is HandlersThingRegistrationRequest {
    return true;
}

export function HandlersThingRegistrationRequestFromJSON(json: any): HandlersThingRegistrationRequest {
    return HandlersThingRegistrationRequestFromJSONTyped(json, false);
}

export function HandlersThingRegistrationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): HandlersThingRegistrationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'options': json['options'] == null ? undefined : json['options'],
        'thingDescription': json['thing_description'] == null ? undefined : json['thing_description'],
    };
}

export function HandlersThingRegistrationRequestToJSON(json: any): HandlersThingRegistrationRequest {
    return HandlersThingRegistrationRequestToJSONTyped(json, false);
}

export function HandlersThingRegistrationRequestToJSONTyped(value?: HandlersThingRegistrationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'options': value['options'],
        'thing_description': value['thingDescription'],
    };
}

