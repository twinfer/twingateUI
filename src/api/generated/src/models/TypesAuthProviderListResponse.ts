/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesAuthProviderResponse } from './TypesAuthProviderResponse';
import {
    TypesAuthProviderResponseFromJSON,
    TypesAuthProviderResponseFromJSONTyped,
    TypesAuthProviderResponseToJSON,
    TypesAuthProviderResponseToJSONTyped,
} from './TypesAuthProviderResponse';

/**
 * 
 * @export
 * @interface TypesAuthProviderListResponse
 */
export interface TypesAuthProviderListResponse {
    /**
     * 
     * @type {Array<TypesAuthProviderResponse>}
     * @memberof TypesAuthProviderListResponse
     */
    providers?: Array<TypesAuthProviderResponse>;
    /**
     * 
     * @type {number}
     * @memberof TypesAuthProviderListResponse
     */
    total?: number;
}

/**
 * Check if a given object implements the TypesAuthProviderListResponse interface.
 */
export function instanceOfTypesAuthProviderListResponse(value: object): value is TypesAuthProviderListResponse {
    return true;
}

export function TypesAuthProviderListResponseFromJSON(json: any): TypesAuthProviderListResponse {
    return TypesAuthProviderListResponseFromJSONTyped(json, false);
}

export function TypesAuthProviderListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesAuthProviderListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'providers': json['providers'] == null ? undefined : ((json['providers'] as Array<any>).map(TypesAuthProviderResponseFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function TypesAuthProviderListResponseToJSON(json: any): TypesAuthProviderListResponse {
    return TypesAuthProviderListResponseToJSONTyped(json, false);
}

export function TypesAuthProviderListResponseToJSONTyped(value?: TypesAuthProviderListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'providers': value['providers'] == null ? undefined : ((value['providers'] as Array<any>).map(TypesAuthProviderResponseToJSON)),
        'total': value['total'],
    };
}

