/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WotThingDescription } from './WotThingDescription';
import {
    WotThingDescriptionFromJSON,
    WotThingDescriptionFromJSONTyped,
    WotThingDescriptionToJSON,
    WotThingDescriptionToJSONTyped,
} from './WotThingDescription';

/**
 * 
 * @export
 * @interface HandlersThingRegistrationResponse
 */
export interface HandlersThingRegistrationResponse {
    /**
     * 
     * @type {object}
     * @memberof HandlersThingRegistrationResponse
     */
    registrationResult?: object;
    /**
     * 
     * @type {WotThingDescription}
     * @memberof HandlersThingRegistrationResponse
     */
    thingDescription?: WotThingDescription;
}

/**
 * Check if a given object implements the HandlersThingRegistrationResponse interface.
 */
export function instanceOfHandlersThingRegistrationResponse(value: object): value is HandlersThingRegistrationResponse {
    return true;
}

export function HandlersThingRegistrationResponseFromJSON(json: any): HandlersThingRegistrationResponse {
    return HandlersThingRegistrationResponseFromJSONTyped(json, false);
}

export function HandlersThingRegistrationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HandlersThingRegistrationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'registrationResult': json['registration_result'] == null ? undefined : json['registration_result'],
        'thingDescription': json['thing_description'] == null ? undefined : WotThingDescriptionFromJSON(json['thing_description']),
    };
}

export function HandlersThingRegistrationResponseToJSON(json: any): HandlersThingRegistrationResponse {
    return HandlersThingRegistrationResponseToJSONTyped(json, false);
}

export function HandlersThingRegistrationResponseToJSONTyped(value?: HandlersThingRegistrationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'registration_result': value['registrationResult'],
        'thing_description': WotThingDescriptionToJSON(value['thingDescription']),
    };
}

