/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DiscoveryActionRequirementFromJSON, DiscoveryActionRequirementToJSON, } from './DiscoveryActionRequirement';
import { DiscoveryEventRequirementFromJSON, DiscoveryEventRequirementToJSON, } from './DiscoveryEventRequirement';
import { DiscoveryPropertyRequirementFromJSON, DiscoveryPropertyRequirementToJSON, } from './DiscoveryPropertyRequirement';
/**
 * Check if a given object implements the DiscoveryCapabilityQuery interface.
 */
export function instanceOfDiscoveryCapabilityQuery(value) {
    return true;
}
export function DiscoveryCapabilityQueryFromJSON(json) {
    return DiscoveryCapabilityQueryFromJSONTyped(json, false);
}
export function DiscoveryCapabilityQueryFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'requiredActions': json['requiredActions'] == null ? undefined : (json['requiredActions'].map(DiscoveryActionRequirementFromJSON)),
        'requiredEvents': json['requiredEvents'] == null ? undefined : (json['requiredEvents'].map(DiscoveryEventRequirementFromJSON)),
        'requiredProperties': json['requiredProperties'] == null ? undefined : (json['requiredProperties'].map(DiscoveryPropertyRequirementFromJSON)),
        'securitySchemes': json['securitySchemes'] == null ? undefined : json['securitySchemes'],
    };
}
export function DiscoveryCapabilityQueryToJSON(json) {
    return DiscoveryCapabilityQueryToJSONTyped(json, false);
}
export function DiscoveryCapabilityQueryToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'requiredActions': value['requiredActions'] == null ? undefined : (value['requiredActions'].map(DiscoveryActionRequirementToJSON)),
        'requiredEvents': value['requiredEvents'] == null ? undefined : (value['requiredEvents'].map(DiscoveryEventRequirementToJSON)),
        'requiredProperties': value['requiredProperties'] == null ? undefined : (value['requiredProperties'].map(DiscoveryPropertyRequirementToJSON)),
        'securitySchemes': value['securitySchemes'],
    };
}
