/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DiscoverySearchQuery
 */
export interface DiscoverySearchQuery {
    /**
     * Semantic filters
     * @type {Array<string>}
     * @memberof DiscoverySearchQuery
     */
    type?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof DiscoverySearchQuery
     */
    actions?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof DiscoverySearchQuery
     */
    events?: Array<string>;
    /**
     * Pagination
     * @type {number}
     * @memberof DiscoverySearchQuery
     */
    limit?: number;
    /**
     * Metadata filters
     * @type {string}
     * @memberof DiscoverySearchQuery
     */
    manufacturer?: string;
    /**
     * 
     * @type {string}
     * @memberof DiscoverySearchQuery
     */
    model?: string;
    /**
     * 
     * @type {number}
     * @memberof DiscoverySearchQuery
     */
    offset?: number;
    /**
     * Sorting
     * @type {string}
     * @memberof DiscoverySearchQuery
     */
    orderBy?: string;
    /**
     * Property filters
     * @type {Array<string>}
     * @memberof DiscoverySearchQuery
     */
    properties?: Array<string>;
    /**
     * Protocol filters
     * @type {Array<string>}
     * @memberof DiscoverySearchQuery
     */
    protocols?: Array<string>;
    /**
     * Text search
     * @type {string}
     * @memberof DiscoverySearchQuery
     */
    text?: string;
}

/**
 * Check if a given object implements the DiscoverySearchQuery interface.
 */
export function instanceOfDiscoverySearchQuery(value: object): value is DiscoverySearchQuery {
    return true;
}

export function DiscoverySearchQueryFromJSON(json: any): DiscoverySearchQuery {
    return DiscoverySearchQueryFromJSONTyped(json, false);
}

export function DiscoverySearchQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscoverySearchQuery {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['@type'] == null ? undefined : json['@type'],
        'actions': json['actions'] == null ? undefined : json['actions'],
        'events': json['events'] == null ? undefined : json['events'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'manufacturer': json['manufacturer'] == null ? undefined : json['manufacturer'],
        'model': json['model'] == null ? undefined : json['model'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'orderBy': json['orderBy'] == null ? undefined : json['orderBy'],
        'properties': json['properties'] == null ? undefined : json['properties'],
        'protocols': json['protocols'] == null ? undefined : json['protocols'],
        'text': json['text'] == null ? undefined : json['text'],
    };
}

export function DiscoverySearchQueryToJSON(json: any): DiscoverySearchQuery {
    return DiscoverySearchQueryToJSONTyped(json, false);
}

export function DiscoverySearchQueryToJSONTyped(value?: DiscoverySearchQuery | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '@type': value['type'],
        'actions': value['actions'],
        'events': value['events'],
        'limit': value['limit'],
        'manufacturer': value['manufacturer'],
        'model': value['model'],
        'offset': value['offset'],
        'orderBy': value['orderBy'],
        'properties': value['properties'],
        'protocols': value['protocols'],
        'text': value['text'],
    };
}

