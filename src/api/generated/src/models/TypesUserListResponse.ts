/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesUserResponse } from './TypesUserResponse';
import {
    TypesUserResponseFromJSON,
    TypesUserResponseFromJSONTyped,
    TypesUserResponseToJSON,
    TypesUserResponseToJSONTyped,
} from './TypesUserResponse';

/**
 * 
 * @export
 * @interface TypesUserListResponse
 */
export interface TypesUserListResponse {
    /**
     * 
     * @type {number}
     * @memberof TypesUserListResponse
     */
    limit?: number;
    /**
     * 
     * @type {number}
     * @memberof TypesUserListResponse
     */
    page?: number;
    /**
     * 
     * @type {number}
     * @memberof TypesUserListResponse
     */
    total?: number;
    /**
     * 
     * @type {Array<TypesUserResponse>}
     * @memberof TypesUserListResponse
     */
    users?: Array<TypesUserResponse>;
}

/**
 * Check if a given object implements the TypesUserListResponse interface.
 */
export function instanceOfTypesUserListResponse(value: object): value is TypesUserListResponse {
    return true;
}

export function TypesUserListResponseFromJSON(json: any): TypesUserListResponse {
    return TypesUserListResponseFromJSONTyped(json, false);
}

export function TypesUserListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesUserListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'limit': json['limit'] == null ? undefined : json['limit'],
        'page': json['page'] == null ? undefined : json['page'],
        'total': json['total'] == null ? undefined : json['total'],
        'users': json['users'] == null ? undefined : ((json['users'] as Array<any>).map(TypesUserResponseFromJSON)),
    };
}

export function TypesUserListResponseToJSON(json: any): TypesUserListResponse {
    return TypesUserListResponseToJSONTyped(json, false);
}

export function TypesUserListResponseToJSONTyped(value?: TypesUserListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'limit': value['limit'],
        'page': value['page'],
        'total': value['total'],
        'users': value['users'] == null ? undefined : ((value['users'] as Array<any>).map(TypesUserResponseToJSON)),
    };
}

