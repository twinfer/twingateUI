/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { mapValues } from '../runtime';
import { WotPropertyAffordanceFromJSON, WotPropertyAffordanceToJSON, } from './WotPropertyAffordance';
import { WotActionAffordanceFromJSON, WotActionAffordanceToJSON, } from './WotActionAffordance';
import { WotLinkFromJSON, WotLinkToJSON, } from './WotLink';
import { WotEventAffordanceFromJSON, WotEventAffordanceToJSON, } from './WotEventAffordance';
import { WotDataSchemaFromJSON, WotDataSchemaToJSON, } from './WotDataSchema';
import { WotSecuritySchemeFromJSON, WotSecuritySchemeToJSON, } from './WotSecurityScheme';
import { WotVersionInfoFromJSON, WotVersionInfoToJSON, } from './WotVersionInfo';
/**
 * Check if a given object implements the WotThingDescription interface.
 */
export function instanceOfWotThingDescription(value) {
    return true;
}
export function WotThingDescriptionFromJSON(json) {
    return WotThingDescriptionFromJSONTyped(json, false);
}
export function WotThingDescriptionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        '$comment': json['$comment'] == null ? undefined : json['$comment'],
        'context': json['@context'] == null ? undefined : json['@context'],
        'type': json['@type'] == null ? undefined : json['@type'],
        'actions': json['actions'] == null ? undefined : (mapValues(json['actions'], WotActionAffordanceFromJSON)),
        'base': json['base'] == null ? undefined : json['base'],
        'created': json['created'] == null ? undefined : json['created'],
        'description': json['description'] == null ? undefined : json['description'],
        'descriptions': json['descriptions'] == null ? undefined : json['descriptions'],
        'events': json['events'] == null ? undefined : (mapValues(json['events'], WotEventAffordanceFromJSON)),
        'forms': json['forms'] == null ? undefined : json['forms'],
        'id': json['id'] == null ? undefined : json['id'],
        'links': json['links'] == null ? undefined : (json['links'].map(WotLinkFromJSON)),
        'modified': json['modified'] == null ? undefined : json['modified'],
        'profile': json['profile'] == null ? undefined : json['profile'],
        'properties': json['properties'] == null ? undefined : (mapValues(json['properties'], WotPropertyAffordanceFromJSON)),
        'schemaDefinitions': json['schemaDefinitions'] == null ? undefined : (mapValues(json['schemaDefinitions'], WotDataSchemaFromJSON)),
        'security': json['security'] == null ? undefined : json['security'],
        'securityDefinitions': json['securityDefinitions'] == null ? undefined : (mapValues(json['securityDefinitions'], WotSecuritySchemeFromJSON)),
        'support': json['support'] == null ? undefined : json['support'],
        'title': json['title'] == null ? undefined : json['title'],
        'titles': json['titles'] == null ? undefined : json['titles'],
        'uris': json['uris'] == null ? undefined : json['uris'],
        'version': json['version'] == null ? undefined : WotVersionInfoFromJSON(json['version']),
    };
}
export function WotThingDescriptionToJSON(json) {
    return WotThingDescriptionToJSONTyped(json, false);
}
export function WotThingDescriptionToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        '$comment': value['$comment'],
        '@context': value['context'],
        '@type': value['type'],
        'actions': value['actions'] == null ? undefined : (mapValues(value['actions'], WotActionAffordanceToJSON)),
        'base': value['base'],
        'created': value['created'],
        'description': value['description'],
        'descriptions': value['descriptions'],
        'events': value['events'] == null ? undefined : (mapValues(value['events'], WotEventAffordanceToJSON)),
        'forms': value['forms'],
        'id': value['id'],
        'links': value['links'] == null ? undefined : (value['links'].map(WotLinkToJSON)),
        'modified': value['modified'],
        'profile': value['profile'],
        'properties': value['properties'] == null ? undefined : (mapValues(value['properties'], WotPropertyAffordanceToJSON)),
        'schemaDefinitions': value['schemaDefinitions'] == null ? undefined : (mapValues(value['schemaDefinitions'], WotDataSchemaToJSON)),
        'security': value['security'],
        'securityDefinitions': value['securityDefinitions'] == null ? undefined : (mapValues(value['securityDefinitions'], WotSecuritySchemeToJSON)),
        'support': value['support'],
        'title': value['title'],
        'titles': value['titles'],
        'uris': value['uris'],
        'version': WotVersionInfoToJSON(value['version']),
    };
}
