/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WotSecurityScheme
 */
export interface WotSecurityScheme {
    /**
     * e.g. "BasicSecurityScheme", "OAuth2SecurityScheme"
     * @type {object}
     * @memberof WotSecurityScheme
     */
    type?: object;
    /**
     * For Bearer
     * @type {string}
     * @memberof WotSecurityScheme
     */
    alg?: string;
    /**
     * For Bearer, OAuth2
     * @type {string}
     * @memberof WotSecurityScheme
     */
    authorization?: string;
    /**
     * 
     * @type {string}
     * @memberof WotSecurityScheme
     */
    description?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof WotSecurityScheme
     */
    descriptions?: { [key: string]: string; };
    /**
     * For OAuth2
     * @type {string}
     * @memberof WotSecurityScheme
     */
    flow?: string;
    /**
     * For Bearer
     * @type {string}
     * @memberof WotSecurityScheme
     */
    format?: string;
    /**
     * For PSK
     * @type {string}
     * @memberof WotSecurityScheme
     */
    identity?: string;
    /**
     * For apikey (location of security information), also used by some other schemes
     * @type {string}
     * @memberof WotSecurityScheme
     */
    _in?: string;
    /**
     * For apikey (name of header/query param)
     * @type {string}
     * @memberof WotSecurityScheme
     */
    name?: string;
    /**
     * URI
     * @type {string}
     * @memberof WotSecurityScheme
     */
    proxy?: string;
    /**
     * Fields for specific security schemes as per TD 1.1
     * @type {string}
     * @memberof WotSecurityScheme
     */
    qop?: string;
    /**
     * For OAuth2
     * @type {string}
     * @memberof WotSecurityScheme
     */
    refresh?: string;
    /**
     * e.g. "basic", "bearer", "apikey", "oauth2" - this is the primary discriminator
     * @type {string}
     * @memberof WotSecurityScheme
     */
    scheme?: string;
    /**
     * For OAuth2
     * @type {Array<string>}
     * @memberof WotSecurityScheme
     */
    scopes?: Array<string>;
    /**
     * For OAuth2
     * @type {string}
     * @memberof WotSecurityScheme
     */
    token?: string;
}

/**
 * Check if a given object implements the WotSecurityScheme interface.
 */
export function instanceOfWotSecurityScheme(value: object): value is WotSecurityScheme {
    return true;
}

export function WotSecuritySchemeFromJSON(json: any): WotSecurityScheme {
    return WotSecuritySchemeFromJSONTyped(json, false);
}

export function WotSecuritySchemeFromJSONTyped(json: any, ignoreDiscriminator: boolean): WotSecurityScheme {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['@type'] == null ? undefined : json['@type'],
        'alg': json['alg'] == null ? undefined : json['alg'],
        'authorization': json['authorization'] == null ? undefined : json['authorization'],
        'description': json['description'] == null ? undefined : json['description'],
        'descriptions': json['descriptions'] == null ? undefined : json['descriptions'],
        'flow': json['flow'] == null ? undefined : json['flow'],
        'format': json['format'] == null ? undefined : json['format'],
        'identity': json['identity'] == null ? undefined : json['identity'],
        '_in': json['in'] == null ? undefined : json['in'],
        'name': json['name'] == null ? undefined : json['name'],
        'proxy': json['proxy'] == null ? undefined : json['proxy'],
        'qop': json['qop'] == null ? undefined : json['qop'],
        'refresh': json['refresh'] == null ? undefined : json['refresh'],
        'scheme': json['scheme'] == null ? undefined : json['scheme'],
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
        'token': json['token'] == null ? undefined : json['token'],
    };
}

export function WotSecuritySchemeToJSON(json: any): WotSecurityScheme {
    return WotSecuritySchemeToJSONTyped(json, false);
}

export function WotSecuritySchemeToJSONTyped(value?: WotSecurityScheme | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '@type': value['type'],
        'alg': value['alg'],
        'authorization': value['authorization'],
        'description': value['description'],
        'descriptions': value['descriptions'],
        'flow': value['flow'],
        'format': value['format'],
        'identity': value['identity'],
        'in': value['_in'],
        'name': value['name'],
        'proxy': value['proxy'],
        'qop': value['qop'],
        'refresh': value['refresh'],
        'scheme': value['scheme'],
        'scopes': value['scopes'],
        'token': value['token'],
    };
}

