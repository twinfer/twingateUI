/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesProcessorConfig } from './TypesProcessorConfig';
import {
    TypesProcessorConfigFromJSON,
    TypesProcessorConfigFromJSONTyped,
    TypesProcessorConfigToJSON,
    TypesProcessorConfigToJSONTyped,
} from './TypesProcessorConfig';
import type { TypesStreamEndpointConfig } from './TypesStreamEndpointConfig';
import {
    TypesStreamEndpointConfigFromJSON,
    TypesStreamEndpointConfigFromJSONTyped,
    TypesStreamEndpointConfigToJSON,
    TypesStreamEndpointConfigToJSONTyped,
} from './TypesStreamEndpointConfig';

/**
 * Request body for creating a new data processing stream
 * @export
 * @interface TypesStreamCreationRequest
 */
export interface TypesStreamCreationRequest {
    /**
     * 
     * @type {string}
     * @memberof TypesStreamCreationRequest
     */
    direction?: string;
    /**
     * 
     * @type {TypesStreamEndpointConfig}
     * @memberof TypesStreamCreationRequest
     */
    input?: TypesStreamEndpointConfig;
    /**
     * 
     * @type {string}
     * @memberof TypesStreamCreationRequest
     */
    interactionName?: string;
    /**
     * 
     * @type {string}
     * @memberof TypesStreamCreationRequest
     */
    interactionType?: string;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof TypesStreamCreationRequest
     */
    metadata?: { [key: string]: object; };
    /**
     * 
     * @type {TypesStreamEndpointConfig}
     * @memberof TypesStreamCreationRequest
     */
    output?: TypesStreamEndpointConfig;
    /**
     * 
     * @type {Array<TypesProcessorConfig>}
     * @memberof TypesStreamCreationRequest
     */
    processorChain?: Array<TypesProcessorConfig>;
    /**
     * 
     * @type {string}
     * @memberof TypesStreamCreationRequest
     */
    thingId?: string;
}

/**
 * Check if a given object implements the TypesStreamCreationRequest interface.
 */
export function instanceOfTypesStreamCreationRequest(value: object): value is TypesStreamCreationRequest {
    return true;
}

export function TypesStreamCreationRequestFromJSON(json: any): TypesStreamCreationRequest {
    return TypesStreamCreationRequestFromJSONTyped(json, false);
}

export function TypesStreamCreationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesStreamCreationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'direction': json['direction'] == null ? undefined : json['direction'],
        'input': json['input'] == null ? undefined : TypesStreamEndpointConfigFromJSON(json['input']),
        'interactionName': json['interaction_name'] == null ? undefined : json['interaction_name'],
        'interactionType': json['interaction_type'] == null ? undefined : json['interaction_type'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'output': json['output'] == null ? undefined : TypesStreamEndpointConfigFromJSON(json['output']),
        'processorChain': json['processor_chain'] == null ? undefined : ((json['processor_chain'] as Array<any>).map(TypesProcessorConfigFromJSON)),
        'thingId': json['thing_id'] == null ? undefined : json['thing_id'],
    };
}

export function TypesStreamCreationRequestToJSON(json: any): TypesStreamCreationRequest {
    return TypesStreamCreationRequestToJSONTyped(json, false);
}

export function TypesStreamCreationRequestToJSONTyped(value?: TypesStreamCreationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'direction': value['direction'],
        'input': TypesStreamEndpointConfigToJSON(value['input']),
        'interaction_name': value['interactionName'],
        'interaction_type': value['interactionType'],
        'metadata': value['metadata'],
        'output': TypesStreamEndpointConfigToJSON(value['output']),
        'processor_chain': value['processorChain'] == null ? undefined : ((value['processorChain'] as Array<any>).map(TypesProcessorConfigToJSON)),
        'thing_id': value['thingId'],
    };
}

