/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { mapValues } from '../runtime';
import { WotDataSchemaFromJSON, WotDataSchemaToJSON, } from './WotDataSchema';
/**
 * Check if a given object implements the WotEventAffordance interface.
 */
export function instanceOfWotEventAffordance(value) {
    return true;
}
export function WotEventAffordanceFromJSON(json) {
    return WotEventAffordanceFromJSONTyped(json, false);
}
export function WotEventAffordanceFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        '$comment': json['$comment'] == null ? undefined : json['$comment'],
        'type': json['@type'] == null ? undefined : json['@type'],
        'cancellation': json['cancellation'] == null ? undefined : WotDataSchemaFromJSON(json['cancellation']),
        'data': json['data'] == null ? undefined : WotDataSchemaFromJSON(json['data']),
        'dataResponse': json['dataResponse'] == null ? undefined : WotDataSchemaFromJSON(json['dataResponse']),
        'description': json['description'] == null ? undefined : json['description'],
        'descriptions': json['descriptions'] == null ? undefined : json['descriptions'],
        'forms': json['forms'] == null ? undefined : json['forms'],
        'subscription': json['subscription'] == null ? undefined : WotDataSchemaFromJSON(json['subscription']),
        'title': json['title'] == null ? undefined : json['title'],
        'titles': json['titles'] == null ? undefined : json['titles'],
        'uriVariables': json['uriVariables'] == null ? undefined : (mapValues(json['uriVariables'], WotDataSchemaFromJSON)),
    };
}
export function WotEventAffordanceToJSON(json) {
    return WotEventAffordanceToJSONTyped(json, false);
}
export function WotEventAffordanceToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        '$comment': value['$comment'],
        '@type': value['type'],
        'cancellation': WotDataSchemaToJSON(value['cancellation']),
        'data': WotDataSchemaToJSON(value['data']),
        'dataResponse': WotDataSchemaToJSON(value['dataResponse']),
        'description': value['description'],
        'descriptions': value['descriptions'],
        'forms': value['forms'],
        'subscription': WotDataSchemaToJSON(value['subscription']),
        'title': value['title'],
        'titles': value['titles'],
        'uriVariables': value['uriVariables'] == null ? undefined : (mapValues(value['uriVariables'], WotDataSchemaToJSON)),
    };
}
