/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WotDataSchema } from './WotDataSchema';
import {
    WotDataSchemaFromJSON,
    WotDataSchemaFromJSONTyped,
    WotDataSchemaToJSON,
    WotDataSchemaToJSONTyped,
} from './WotDataSchema';

/**
 * 
 * @export
 * @interface WotActionAffordance
 */
export interface WotActionAffordance {
    /**
     * 
     * @type {string}
     * @memberof WotActionAffordance
     */
    $comment?: string;
    /**
     * Added for W3C WoT TD 1.1 semantic annotations
     * @type {Array<string>}
     * @memberof WotActionAffordance
     */
    type?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof WotActionAffordance
     */
    description?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof WotActionAffordance
     */
    descriptions?: { [key: string]: string; };
    /**
     * Must contain at least one form
     * @type {Array<object>}
     * @memberof WotActionAffordance
     */
    forms?: Array<object>;
    /**
     * Default false
     * @type {boolean}
     * @memberof WotActionAffordance
     */
    idempotent?: boolean;
    /**
     * 
     * @type {WotDataSchema}
     * @memberof WotActionAffordance
     */
    input?: WotDataSchema;
    /**
     * 
     * @type {WotDataSchema}
     * @memberof WotActionAffordance
     */
    output?: WotDataSchema;
    /**
     * Default false
     * @type {boolean}
     * @memberof WotActionAffordance
     */
    safe?: boolean;
    /**
     * Added for W3C WoT TD 1.1
     * @type {boolean}
     * @memberof WotActionAffordance
     */
    synchronous?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WotActionAffordance
     */
    title?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof WotActionAffordance
     */
    titles?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: WotDataSchema; }}
     * @memberof WotActionAffordance
     */
    uriVariables?: { [key: string]: WotDataSchema; };
}

/**
 * Check if a given object implements the WotActionAffordance interface.
 */
export function instanceOfWotActionAffordance(value: object): value is WotActionAffordance {
    return true;
}

export function WotActionAffordanceFromJSON(json: any): WotActionAffordance {
    return WotActionAffordanceFromJSONTyped(json, false);
}

export function WotActionAffordanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): WotActionAffordance {
    if (json == null) {
        return json;
    }
    return {
        
        '$comment': json['$comment'] == null ? undefined : json['$comment'],
        'type': json['@type'] == null ? undefined : json['@type'],
        'description': json['description'] == null ? undefined : json['description'],
        'descriptions': json['descriptions'] == null ? undefined : json['descriptions'],
        'forms': json['forms'] == null ? undefined : json['forms'],
        'idempotent': json['idempotent'] == null ? undefined : json['idempotent'],
        'input': json['input'] == null ? undefined : WotDataSchemaFromJSON(json['input']),
        'output': json['output'] == null ? undefined : WotDataSchemaFromJSON(json['output']),
        'safe': json['safe'] == null ? undefined : json['safe'],
        'synchronous': json['synchronous'] == null ? undefined : json['synchronous'],
        'title': json['title'] == null ? undefined : json['title'],
        'titles': json['titles'] == null ? undefined : json['titles'],
        'uriVariables': json['uriVariables'] == null ? undefined : (mapValues(json['uriVariables'], WotDataSchemaFromJSON)),
    };
}

export function WotActionAffordanceToJSON(json: any): WotActionAffordance {
    return WotActionAffordanceToJSONTyped(json, false);
}

export function WotActionAffordanceToJSONTyped(value?: WotActionAffordance | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '$comment': value['$comment'],
        '@type': value['type'],
        'description': value['description'],
        'descriptions': value['descriptions'],
        'forms': value['forms'],
        'idempotent': value['idempotent'],
        'input': WotDataSchemaToJSON(value['input']),
        'output': WotDataSchemaToJSON(value['output']),
        'safe': value['safe'],
        'synchronous': value['synchronous'],
        'title': value['title'],
        'titles': value['titles'],
        'uriVariables': value['uriVariables'] == null ? undefined : (mapValues(value['uriVariables'], WotDataSchemaToJSON)),
    };
}

