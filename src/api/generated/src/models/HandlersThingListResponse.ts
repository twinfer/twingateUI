/* tslint:disable */
/* eslint-disable */
/**
 * TwinCore Gateway API
 * TwinCore Gateway is a Web of Things (WoT) gateway that manages IoT devices through W3C Thing Descriptions. It dynamically generates data processing pipelines using Benthos and exposes HTTP APIs for device interaction.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@twinfer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WotThingDescription } from './WotThingDescription';
import {
    WotThingDescriptionFromJSON,
    WotThingDescriptionFromJSONTyped,
    WotThingDescriptionToJSON,
    WotThingDescriptionToJSONTyped,
} from './WotThingDescription';

/**
 * 
 * @export
 * @interface HandlersThingListResponse
 */
export interface HandlersThingListResponse {
    /**
     * 
     * @type {number}
     * @memberof HandlersThingListResponse
     */
    count?: number;
    /**
     * 
     * @type {number}
     * @memberof HandlersThingListResponse
     */
    limit?: number;
    /**
     * 
     * @type {number}
     * @memberof HandlersThingListResponse
     */
    offset?: number;
    /**
     * 
     * @type {Array<WotThingDescription>}
     * @memberof HandlersThingListResponse
     */
    things?: Array<WotThingDescription>;
    /**
     * 
     * @type {number}
     * @memberof HandlersThingListResponse
     */
    total?: number;
}

/**
 * Check if a given object implements the HandlersThingListResponse interface.
 */
export function instanceOfHandlersThingListResponse(value: object): value is HandlersThingListResponse {
    return true;
}

export function HandlersThingListResponseFromJSON(json: any): HandlersThingListResponse {
    return HandlersThingListResponseFromJSONTyped(json, false);
}

export function HandlersThingListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HandlersThingListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'things': json['things'] == null ? undefined : ((json['things'] as Array<any>).map(WotThingDescriptionFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function HandlersThingListResponseToJSON(json: any): HandlersThingListResponse {
    return HandlersThingListResponseToJSONTyped(json, false);
}

export function HandlersThingListResponseToJSONTyped(value?: HandlersThingListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'limit': value['limit'],
        'offset': value['offset'],
        'things': value['things'] == null ? undefined : ((value['things'] as Array<any>).map(WotThingDescriptionToJSON)),
        'total': value['total'],
    };
}

